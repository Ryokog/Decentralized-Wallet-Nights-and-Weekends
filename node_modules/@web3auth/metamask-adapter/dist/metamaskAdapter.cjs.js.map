{"version":3,"file":"metamaskAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/metamask-adapter/webpack/bootstrap","webpack://@web3auth/metamask-adapter/webpack/runtime/compat get default export","webpack://@web3auth/metamask-adapter/webpack/runtime/define property getters","webpack://@web3auth/metamask-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/metamask-adapter/webpack/runtime/make namespace object","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@metamask/detect-provider\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/metamask-adapter/./src/metamaskAdapter.ts","webpack://@web3auth/metamask-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@metamask/detect-provider\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\ninterface EthereumProvider extends SafeEventEmitterProvider {\n  isMetaMask?: boolean;\n  isConnected: () => boolean;\n  chainId: string;\n}\nexport type MetamaskAdapterOptions = BaseAdapterSettings;\n\nclass MetamaskAdapter extends BaseEvmAdapter<void> {\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly name: string = WALLET_ADAPTERS.METAMASK;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  private metamaskProvider: EthereumProvider | null = null;\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n      return this.metamaskProvider as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this.metamaskProvider = (await detectEthereumProvider({ mustBeMetaMask: true })) as EthereumProvider;\n    if (!this.metamaskProvider) throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n    try {\n      log.debug(\"initializing metamask adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.METAMASK });\n    try {\n      await this.metamaskProvider.request({ method: \"eth_requestAccounts\" });\n      const { chainId } = this.metamaskProvider;\n      if (chainId !== (this.chainConfig as CustomChainConfig).chainId) {\n        await this.switchChain(this.chainConfig as CustomChainConfig);\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n      this.provider.once(\"disconnect\", () => {\n        // ready to be connected again\n        this.disconnect();\n      });\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.METAMASK, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    this.provider?.removeAllListeners();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async switchChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    try {\n      await this.metamaskProvider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: chainConfig.chainId }],\n      });\n    } catch (switchError: unknown) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if ((switchError as { code: number }).code === 4902) {\n        await this.metamaskProvider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: chainConfig.chainId,\n              chainName: chainConfig.displayName,\n              rpcUrls: [chainConfig.rpcTarget],\n              blockExplorerUrls: [chainConfig.blockExplorer],\n              nativeCurrency: {\n                name: chainConfig.tickerName,\n                symbol: chainConfig.ticker,\n                decimals: chainConfig.decimals || 18,\n              },\n            },\n          ],\n        });\n      } else {\n        throw switchError;\n      }\n    }\n  }\n}\n\nexport { MetamaskAdapter };\n","export * from \"./metamaskAdapter\";\n"],"names":["detectEthereumProvider","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","BaseEvmAdapter","MetamaskAdapter","EIP155","EXTERNAL","METAMASK","NOT_READY","status","CONNECTED","metamaskProvider","_","Error","options","mustBeMetaMask","notInstalled","READY","emit","debug","autoConnect","rehydrated","connect","ERRORED","notConnectedError","CONNECTING","adapter","request","method","chainId","chainConfig","switchChain","provider","once","disconnect","reconnected","connectionError","cleanup","removeAllListeners","params","code","chainName","displayName","rpcUrls","rpcTarget","blockExplorerUrls","blockExplorer","nativeCurrency","name","tickerName","symbol","ticker","decimals"],"sourceRoot":""}