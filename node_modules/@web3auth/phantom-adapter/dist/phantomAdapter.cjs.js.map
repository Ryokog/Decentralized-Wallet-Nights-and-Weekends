{"version":3,"file":"phantomAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/phantom-adapter/webpack/bootstrap","webpack://@web3auth/phantom-adapter/webpack/runtime/compat get default export","webpack://@web3auth/phantom-adapter/webpack/runtime/define property getters","webpack://@web3auth/phantom-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/phantom-adapter/webpack/runtime/make namespace object","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@web3auth/base-solana-adapter\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@web3auth/solana-provider\"","webpack://@web3auth/phantom-adapter/./src/utils.ts","webpack://@web3auth/phantom-adapter/./src/phantomAdapter.ts","webpack://@web3auth/phantom-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-solana-adapter\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/solana-provider\");","import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!(window as any).solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return (window as any).solana;\n  }\n  const isAvailable = await poll(() => (window as any).solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return (window as any).solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport type PhantomAdapterOptions = BaseAdapterSettings;\n\nexport class PhantomAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.phantomProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<SafeEventEmitterProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) {\n              reject(WalletInitializationError.notInstalled());\n              return;\n            }\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      await super.disconnect();\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<SafeEventEmitterProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n","export * from \"./phantomAdapter\";\n"],"names":["poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","options","isPhantomAvailable","window","solana","isPhantom","isAvailable","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseSolanaAdapter","PhantomInjectedProvider","PhantomAdapter","PHANTOM","SOLANA","EXTERNAL","NOT_READY","_wallet","off","_onDisconnect","rehydrated","status","CONNECTED","READY","emit","DISCONNECTED","isConnected","phantomProvider","provider","_","Error","notInstalled","config","chainConfig","debug","autoConnect","connect","error","CONNECTING","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","windowClosed","args","apply","reason","connectionError","message","publicKey","on","ERRORED","cleanup","disconnect","disconnectionError","isWalletConnected","notConnectedError","injectedProvider","setupProvider","reconnected"],"sourceRoot":""}